// Esp32 를 이용하여 wifi 연결 

// esp32에 SHT31을 연결 후 핸드폰 핫스팟을 이용하여 wifi 연결 후 인터넷 창에서 LED 제어 및 인터넷 창에 온,습도 표시. 

 

#include <WiFi.h> 

#include "Adafruit_SHT31.h"  

bool enableHeater = false;  

uint8_t loopCnt = 0;  

Adafruit_SHT31 sht3x = Adafruit_SHT31();  

  

const char* ssid     = "ssid"; 

const char* password = "password"; 

  

WiFiServer server(80); 

  

void setup() 

{ 

  sht3x.begin(0x44); 

    Serial.begin(115200); 

    pinMode(5, OUTPUT);       

  

    delay(10); 

  

    Serial.println(); 

    Serial.println(); 

    Serial.print("Connecting to "); 

    Serial.println(ssid); 

  

    WiFi.begin(ssid, password); 

  

    while (WiFi.status() != WL_CONNECTED) { 

        delay(500); 

        Serial.print("."); 

    } 

  

    Serial.println(""); 

    Serial.println("WiFi connected."); 

    Serial.println("IP address: "); 

    Serial.println(WiFi.localIP()); 

    server.begin(); 

} 

  

int value = 0; 

  

void loop(){ 

  float t = sht3x.readTemperature();  

  float h = sht3x.readHumidity();  

  

WiFiClient client = server.available();    

  

  

  if (client) {                             

    Serial.println("New Client.");            

    String currentLine = "";                 

    while (client.connected()) {             

      if (client.available()) {              

        char c = client.read();              

        Serial.write(c);                     

        if (c == '\n') {                     

  

          if (currentLine.length() == 0) { 

            client.println("HTTP/1.1 200 OK"); 

            client.println("Content-type:text/html"); 

            client.println(); 

  

            client.print("Click <a href=\"/H\">here</a> to turn the LED on pin 5 on.<br>"); 

            client.print("Click <a href=\"/L\">here</a> to turn the LED on pin 5 off.<br>"); 

            if (! isnan(t)) { 

              client.print("Temp *C "); client.println(t); 

              client.print("<br>"); 

            } 

            if (! isnan(h)) { 

              client.print("Hum. % = "); client.println(h); 

            } 

  

            client.println(); 

            break; 

          } else {     

            currentLine = ""; 

          } 

        } else if (c != '\r') {   

          currentLine += c;       

        } 

  

        if (currentLine.endsWith("GET /H")) { 

          digitalWrite(5, HIGH);               

        } 

        if (currentLine.endsWith("GET /L")) { 

          digitalWrite(5, LOW);                 

        } 

      } 

    } 

    client.stop(); 

    Serial.println("Client Disconnected."); 

  } 

} 
